// Code generated by protoc-gen-go. DO NOT EDIT.
// source: portdomain.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthCheckReprly_ServingStatus int32

const (
	HealthCheckReprly_UNKNOWN     HealthCheckReprly_ServingStatus = 0
	HealthCheckReprly_SERVING     HealthCheckReprly_ServingStatus = 1
	HealthCheckReprly_NOT_SERVING HealthCheckReprly_ServingStatus = 2
)

var HealthCheckReprly_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}

var HealthCheckReprly_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x HealthCheckReprly_ServingStatus) String() string {
	return proto.EnumName(HealthCheckReprly_ServingStatus_name, int32(x))
}

func (HealthCheckReprly_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9909f1b550ffea54, []int{1, 0}
}

type HealthCheckRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9909f1b550ffea54, []int{0}
}

func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(m, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

type HealthCheckReprly struct {
	Status               HealthCheckReprly_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=v1.HealthCheckReprly_ServingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *HealthCheckReprly) Reset()         { *m = HealthCheckReprly{} }
func (m *HealthCheckReprly) String() string { return proto.CompactTextString(m) }
func (*HealthCheckReprly) ProtoMessage()    {}
func (*HealthCheckReprly) Descriptor() ([]byte, []int) {
	return fileDescriptor_9909f1b550ffea54, []int{1}
}

func (m *HealthCheckReprly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckReprly.Unmarshal(m, b)
}
func (m *HealthCheckReprly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckReprly.Marshal(b, m, deterministic)
}
func (m *HealthCheckReprly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckReprly.Merge(m, src)
}
func (m *HealthCheckReprly) XXX_Size() int {
	return xxx_messageInfo_HealthCheckReprly.Size(m)
}
func (m *HealthCheckReprly) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckReprly.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckReprly proto.InternalMessageInfo

func (m *HealthCheckReprly) GetStatus() HealthCheckReprly_ServingStatus {
	if m != nil {
		return m.Status
	}
	return HealthCheckReprly_UNKNOWN
}

// The request message containing the user's name.
type GetPortRequest struct {
	Portkey              string   `protobuf:"bytes,1,opt,name=portkey,proto3" json:"portkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPortRequest) Reset()         { *m = GetPortRequest{} }
func (m *GetPortRequest) String() string { return proto.CompactTextString(m) }
func (*GetPortRequest) ProtoMessage()    {}
func (*GetPortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9909f1b550ffea54, []int{2}
}

func (m *GetPortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPortRequest.Unmarshal(m, b)
}
func (m *GetPortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPortRequest.Marshal(b, m, deterministic)
}
func (m *GetPortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPortRequest.Merge(m, src)
}
func (m *GetPortRequest) XXX_Size() int {
	return xxx_messageInfo_GetPortRequest.Size(m)
}
func (m *GetPortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPortRequest proto.InternalMessageInfo

func (m *GetPortRequest) GetPortkey() string {
	if m != nil {
		return m.Portkey
	}
	return ""
}

// The response message containing the greetings
type GetPortReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPortReply) Reset()         { *m = GetPortReply{} }
func (m *GetPortReply) String() string { return proto.CompactTextString(m) }
func (*GetPortReply) ProtoMessage()    {}
func (*GetPortReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9909f1b550ffea54, []int{3}
}

func (m *GetPortReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPortReply.Unmarshal(m, b)
}
func (m *GetPortReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPortReply.Marshal(b, m, deterministic)
}
func (m *GetPortReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPortReply.Merge(m, src)
}
func (m *GetPortReply) XXX_Size() int {
	return xxx_messageInfo_GetPortReply.Size(m)
}
func (m *GetPortReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPortReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetPortReply proto.InternalMessageInfo

func (m *GetPortReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AddUpdatePortRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUpdatePortRequest) Reset()         { *m = AddUpdatePortRequest{} }
func (m *AddUpdatePortRequest) String() string { return proto.CompactTextString(m) }
func (*AddUpdatePortRequest) ProtoMessage()    {}
func (*AddUpdatePortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9909f1b550ffea54, []int{4}
}

func (m *AddUpdatePortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUpdatePortRequest.Unmarshal(m, b)
}
func (m *AddUpdatePortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUpdatePortRequest.Marshal(b, m, deterministic)
}
func (m *AddUpdatePortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUpdatePortRequest.Merge(m, src)
}
func (m *AddUpdatePortRequest) XXX_Size() int {
	return xxx_messageInfo_AddUpdatePortRequest.Size(m)
}
func (m *AddUpdatePortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUpdatePortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUpdatePortRequest proto.InternalMessageInfo

func (m *AddUpdatePortRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddUpdatePortRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// The response message containing the greetings
type AddUpdatePortReply struct {
	Message              bool     `protobuf:"varint,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUpdatePortReply) Reset()         { *m = AddUpdatePortReply{} }
func (m *AddUpdatePortReply) String() string { return proto.CompactTextString(m) }
func (*AddUpdatePortReply) ProtoMessage()    {}
func (*AddUpdatePortReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9909f1b550ffea54, []int{5}
}

func (m *AddUpdatePortReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUpdatePortReply.Unmarshal(m, b)
}
func (m *AddUpdatePortReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUpdatePortReply.Marshal(b, m, deterministic)
}
func (m *AddUpdatePortReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUpdatePortReply.Merge(m, src)
}
func (m *AddUpdatePortReply) XXX_Size() int {
	return xxx_messageInfo_AddUpdatePortReply.Size(m)
}
func (m *AddUpdatePortReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUpdatePortReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddUpdatePortReply proto.InternalMessageInfo

func (m *AddUpdatePortReply) GetMessage() bool {
	if m != nil {
		return m.Message
	}
	return false
}

func init() {
	proto.RegisterEnum("v1.HealthCheckReprly_ServingStatus", HealthCheckReprly_ServingStatus_name, HealthCheckReprly_ServingStatus_value)
	proto.RegisterType((*HealthCheckRequest)(nil), "v1.HealthCheckRequest")
	proto.RegisterType((*HealthCheckReprly)(nil), "v1.HealthCheckReprly")
	proto.RegisterType((*GetPortRequest)(nil), "v1.GetPortRequest")
	proto.RegisterType((*GetPortReply)(nil), "v1.GetPortReply")
	proto.RegisterType((*AddUpdatePortRequest)(nil), "v1.AddUpdatePortRequest")
	proto.RegisterType((*AddUpdatePortReply)(nil), "v1.AddUpdatePortReply")
}

func init() { proto.RegisterFile("portdomain.proto", fileDescriptor_9909f1b550ffea54) }

var fileDescriptor_9909f1b550ffea54 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0x59, 0x30, 0xa0, 0xc3, 0x1f, 0xeb, 0x04, 0x49, 0xc3, 0x89, 0xac, 0x17, 0xe2, 0xa1,
	0x09, 0x78, 0x53, 0x2e, 0x06, 0x0d, 0x1a, 0x93, 0x62, 0x5a, 0xd1, 0xa3, 0x59, 0xed, 0x06, 0x08,
	0x85, 0xae, 0xed, 0xd2, 0xa4, 0xef, 0xe0, 0x53, 0xf9, 0x64, 0x66, 0x37, 0x2d, 0x52, 0xe9, 0x6d,
	0x67, 0xe6, 0x37, 0x33, 0xdf, 0x7c, 0x2d, 0x18, 0x22, 0x08, 0xa5, 0x17, 0xac, 0xd9, 0x72, 0x63,
	0x89, 0x30, 0x90, 0x01, 0x96, 0xe3, 0x01, 0x6d, 0x03, 0x3e, 0x70, 0xe6, 0xcb, 0xc5, 0x78, 0xc1,
	0x3f, 0x57, 0x0e, 0xff, 0xda, 0xf2, 0x48, 0xd2, 0x6f, 0x02, 0x67, 0xb9, 0xb4, 0x08, 0xfd, 0x04,
	0x6f, 0xa0, 0x1a, 0x49, 0x26, 0xb7, 0x91, 0x49, 0x7a, 0xa4, 0xdf, 0x1a, 0x5e, 0x58, 0xf1, 0xc0,
	0x3a, 0xc0, 0x2c, 0x97, 0x87, 0xf1, 0x72, 0x33, 0x77, 0x35, 0xea, 0xa4, 0x2d, 0xf4, 0x1a, 0x9a,
	0xb9, 0x02, 0xd6, 0xa1, 0x36, 0xb3, 0x9f, 0xec, 0xe9, 0x9b, 0x6d, 0x94, 0x54, 0xe0, 0xde, 0x3b,
	0xaf, 0x8f, 0xf6, 0xc4, 0x20, 0x78, 0x0a, 0x75, 0x7b, 0xfa, 0xf2, 0x9e, 0x25, 0xca, 0xf4, 0x12,
	0x5a, 0x13, 0x2e, 0x9f, 0x83, 0x50, 0xa6, 0x02, 0xd1, 0x84, 0x9a, 0x3a, 0x67, 0xc5, 0x13, 0xad,
	0xe5, 0xc4, 0xc9, 0x42, 0xda, 0x87, 0xc6, 0x8e, 0x15, 0x7e, 0xa2, 0xc8, 0x35, 0x8f, 0x22, 0x36,
	0xe7, 0x19, 0x99, 0x86, 0x74, 0x04, 0xed, 0x5b, 0xcf, 0x9b, 0x09, 0x8f, 0x49, 0xbe, 0x3f, 0xdb,
	0x80, 0xca, 0xdf, 0x5c, 0xf5, 0x44, 0x84, 0x23, 0x8f, 0x49, 0x66, 0x56, 0x7a, 0xa4, 0xdf, 0x70,
	0xf4, 0x9b, 0x5a, 0x80, 0xff, 0xba, 0x0b, 0xb6, 0x1d, 0xef, 0xb6, 0x0d, 0x7f, 0x08, 0x80, 0xe2,
	0xee, 0xf4, 0x17, 0xc0, 0x11, 0xd4, 0xf7, 0x9c, 0xc3, 0xce, 0x81, 0x95, 0x5a, 0x4b, 0xf7, 0xbc,
	0xd0, 0x62, 0x1c, 0x40, 0x2d, 0x3d, 0x12, 0x51, 0x11, 0x79, 0x77, 0xba, 0x46, 0x2e, 0x27, 0xfc,
	0x84, 0x96, 0x70, 0x0c, 0xcd, 0x9c, 0x5e, 0x34, 0x15, 0x54, 0x64, 0x40, 0xb7, 0x53, 0x50, 0xd1,
	0x43, 0x3e, 0xaa, 0xfa, 0xc7, 0xb9, 0xfa, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x66, 0x24, 0x93, 0x55,
	0x4c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PortDomainClient is the client API for PortDomain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortDomainClient interface {
	HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckReprly, error)
	GetPort(ctx context.Context, in *GetPortRequest, opts ...grpc.CallOption) (*GetPortReply, error)
	AddUpdatePort(ctx context.Context, in *AddUpdatePortRequest, opts ...grpc.CallOption) (*AddUpdatePortReply, error)
}

type portDomainClient struct {
	cc *grpc.ClientConn
}

func NewPortDomainClient(cc *grpc.ClientConn) PortDomainClient {
	return &portDomainClient{cc}
}

func (c *portDomainClient) HealthCheck(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckReprly, error) {
	out := new(HealthCheckReprly)
	err := c.cc.Invoke(ctx, "/v1.PortDomain/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portDomainClient) GetPort(ctx context.Context, in *GetPortRequest, opts ...grpc.CallOption) (*GetPortReply, error) {
	out := new(GetPortReply)
	err := c.cc.Invoke(ctx, "/v1.PortDomain/GetPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portDomainClient) AddUpdatePort(ctx context.Context, in *AddUpdatePortRequest, opts ...grpc.CallOption) (*AddUpdatePortReply, error) {
	out := new(AddUpdatePortReply)
	err := c.cc.Invoke(ctx, "/v1.PortDomain/AddUpdatePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortDomainServer is the server API for PortDomain service.
type PortDomainServer interface {
	HealthCheck(context.Context, *HealthCheckRequest) (*HealthCheckReprly, error)
	GetPort(context.Context, *GetPortRequest) (*GetPortReply, error)
	AddUpdatePort(context.Context, *AddUpdatePortRequest) (*AddUpdatePortReply, error)
}

// UnimplementedPortDomainServer can be embedded to have forward compatible implementations.
type UnimplementedPortDomainServer struct {
}

func (*UnimplementedPortDomainServer) HealthCheck(ctx context.Context, req *HealthCheckRequest) (*HealthCheckReprly, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (*UnimplementedPortDomainServer) GetPort(ctx context.Context, req *GetPortRequest) (*GetPortReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPort not implemented")
}
func (*UnimplementedPortDomainServer) AddUpdatePort(ctx context.Context, req *AddUpdatePortRequest) (*AddUpdatePortReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUpdatePort not implemented")
}

func RegisterPortDomainServer(s *grpc.Server, srv PortDomainServer) {
	s.RegisterService(&_PortDomain_serviceDesc, srv)
}

func _PortDomain_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PortDomain/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServer).HealthCheck(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortDomain_GetPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServer).GetPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PortDomain/GetPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServer).GetPort(ctx, req.(*GetPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortDomain_AddUpdatePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUpdatePortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServer).AddUpdatePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PortDomain/AddUpdatePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServer).AddUpdatePort(ctx, req.(*AddUpdatePortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PortDomain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.PortDomain",
	HandlerType: (*PortDomainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _PortDomain_HealthCheck_Handler,
		},
		{
			MethodName: "GetPort",
			Handler:    _PortDomain_GetPort_Handler,
		},
		{
			MethodName: "AddUpdatePort",
			Handler:    _PortDomain_AddUpdatePort_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "portdomain.proto",
}
